version: '3'

volumes:
  web_data:
  cloudflared:

services:
  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./web:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - xray
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost", "||", "exit", "1"]
      interval: 30s
      timeout: 5s
      retries: 3
      
  proxy:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - xray
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost", "||", "exit", "1"]
      interval: 30s
      timeout: 5s
      retries: 3
  xray:
    build:
      context: .
    restart: always
    # No need to expose ports publicly - cloudflared will handle this
    expose:
      - "443"
    volumes:
      - ./config:/etc/xray
      - ./certs:/certs
      - ./logs/xray:/var/log/xray
    environment:
      - XRAY_DOMAIN=${DOMAIN:-example.com}
    depends_on:
      - acme
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep xray | grep -v grep || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
      
  cloudflared:
    image: cloudflare/cloudflared:latest
    restart: always
    # Don't use host networking - it's causing lookup issues
    command: tunnel run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    depends_on:
      - proxy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:20241/metrics", "||", "exit", "1"]
      interval: 60s
      timeout: 5s
      retries: 3
      
  acme:
    image: neilpang/acme.sh:latest
    restart: "no"
    volumes:
      - ./acme:/acme.sh
      - ./certs:/certs
    environment:
      - CF_Token=${CF_TOKEN}
      - CF_Account_ID=${CF_ACCOUNT_ID}
      - CF_Zone_ID=${CF_ZONE_ID}
      - DOMAIN=${DOMAIN:-example.com}
      - CF_Email=${CF_EMAIL}
    command: >
      --issue 
      --dns dns_cf 
      -d ${DOMAIN:-example.com}
      --key-file /certs/private.key
      --cert-file /certs/cert.crt
      --fullchain-file /certs/fullchain.crt
      --server letsencrypt